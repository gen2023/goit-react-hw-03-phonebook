{"version":3,"sources":["components/AddContact/AddContact.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["AddContact","state","name","number","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","saveContact","resetForm","this","onSubmit","type","className","placeholder","onChange","Component","defaultProps","ContactListItem","onRemove","onClick","ContactList","contacts","onRemoveContact","map","id","key","Filter","filter","handleFilter","App","contact","shortid","generate","find","alert","concat","removeContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","nextContacts","setItem","stringify","toLowerCase","includes","filterView","filterReturn","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1cd04f9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport propTypes from 'prop-types';\n\nimport './AddContact.css';\n\nexport default class AddContact extends Component {\n  static defaultProps = {};\n\n  static propTypes = {\n    saveContact: propTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.saveContact({ ...this.state });\n    this.resetForm();\n  };\n\n  resetForm() {\n    this.setState({ name: '', number: '' });\n  }\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Enter name\"\n              value={name}\n              name=\"name\"\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Number\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Enter number\"\n              value={number}\n              name=\"number\"\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nfunction ContactListItem({ name, number, onRemove }) {\n  return (\n    <li className=\"listContacts\">\n      <span className=\"list\">{name}</span>\n      <span className=\"list\"> {number}</span>\n      <button className=\"list\" type=\"button\" onClick={onRemove}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  name: propTypes.string.isRequired,\n  number: propTypes.string.isRequired,\n  onRemove: propTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\n\nimport './Contact.css';\n\nfunction ContactList({ contacts, onRemoveContact }) {\n  return (\n    <ul className=\"contextListContacts\">\n      <header className=\"listContacts\">\n        <span className=\"headerList\">name</span>\n        <span className=\"headerList\">telephone</span>\n        <span className=\"headerList\">action</span>\n      </header>\n\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onRemove={() => onRemoveContact(id)}\n        />\n      ))}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  contacts: propTypes.oneOfType([\n    propTypes.arrayOf(\n      propTypes.exact({\n        id: propTypes.string.isRequired,\n        name: propTypes.string.isRequired,\n        number: propTypes.number.isRequired,\n      }),\n    ),\n    propTypes.array,\n  ]),\n  onRemoveContact: propTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst Filter = ({ filter, handleFilter }) => (\n  <div>\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Enter name\"\n        value={filter}\n        name=\"filter\"\n        onChange={handleFilter}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  filter: propTypes.string.isRequired,\n  handleFilter: propTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport AddContact from './AddContact';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\n\nimport '../../node_modules/modern-normalize/modern-normalize.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  saveContact = ({ name, number }) => {\n    const contact = { name, number, id: shortid.generate() };\n\n    const { contacts } = this.state;\n    const checkedName = contacts.find(contact => name === contact.name);\n\n    if (checkedName) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    if (!name || !number) {\n      return alert(`Fill in all the fields`);\n    }\n\n    this.setState(state => ({ contacts: state.contacts.concat(contact) }));\n  };\n  handleFilter = event => {\n    this.setState({ filter: event.target.value });\n  };\n  filterReturn() {\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n    );\n  }\n  removeContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filterView = this.filterReturn();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <AddContact saveContact={this.saveContact} />\n        <h2>Contact</h2>\n        {contacts.length >= 2 && (\n          <Filter filter={filter} handleFilter={this.handleFilter} />\n        )}\n        {filterView.length > 0 ? (\n          <ContactList\n            contacts={filterView}\n            onRemoveContact={this.removeContact}\n          />\n        ) : (\n          contacts.length !== 0 && (\n            <ContactList\n              contacts={contacts}\n              onRemoveContact={this.removeContact}\n            />\n          )\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}